// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/indusrtial-calculator.proto

package industrial_calculator_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_PRINT CommandType = 0
	CommandType_CALC  CommandType = 1
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "PRINT",
		1: "CALC",
	}
	CommandType_value = map[string]int32{
		"PRINT": 0,
		"CALC":  1,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_indusrtial_calculator_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_api_indusrtial_calculator_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_api_indusrtial_calculator_proto_rawDescGZIP(), []int{0}
}

type Operation int32

const (
	Operation_PLUS     Operation = 0
	Operation_MINUS    Operation = 1
	Operation_MULTIPLY Operation = 2
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "PLUS",
		1: "MINUS",
		2: "MULTIPLY",
	}
	Operation_value = map[string]int32{
		"PLUS":     0,
		"MINUS":    1,
		"MULTIPLY": 2,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_indusrtial_calculator_proto_enumTypes[1].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_api_indusrtial_calculator_proto_enumTypes[1]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_api_indusrtial_calculator_proto_rawDescGZIP(), []int{1}
}

type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  CommandType            `protobuf:"varint,1,opt,name=type,proto3,enum=api.CommandType" json:"type,omitempty"`
	Var   string                 `protobuf:"bytes,2,opt,name=var,proto3" json:"var,omitempty"`
	Op    Operation              `protobuf:"varint,3,opt,name=op,proto3,enum=api.Operation" json:"op,omitempty"`
	// Types that are valid to be assigned to Left:
	//
	//	*Command_LeftInt
	//	*Command_LeftStr
	Left isCommand_Left `protobuf_oneof:"left"`
	// Types that are valid to be assigned to Right:
	//
	//	*Command_RightInt
	//	*Command_RightStr
	Right         isCommand_Right `protobuf_oneof:"right"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_api_indusrtial_calculator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_api_indusrtial_calculator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_api_indusrtial_calculator_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_PRINT
}

func (x *Command) GetVar() string {
	if x != nil {
		return x.Var
	}
	return ""
}

func (x *Command) GetOp() Operation {
	if x != nil {
		return x.Op
	}
	return Operation_PLUS
}

func (x *Command) GetLeft() isCommand_Left {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *Command) GetLeftInt() int64 {
	if x != nil {
		if x, ok := x.Left.(*Command_LeftInt); ok {
			return x.LeftInt
		}
	}
	return 0
}

func (x *Command) GetLeftStr() string {
	if x != nil {
		if x, ok := x.Left.(*Command_LeftStr); ok {
			return x.LeftStr
		}
	}
	return ""
}

func (x *Command) GetRight() isCommand_Right {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *Command) GetRightInt() int64 {
	if x != nil {
		if x, ok := x.Right.(*Command_RightInt); ok {
			return x.RightInt
		}
	}
	return 0
}

func (x *Command) GetRightStr() string {
	if x != nil {
		if x, ok := x.Right.(*Command_RightStr); ok {
			return x.RightStr
		}
	}
	return ""
}

type isCommand_Left interface {
	isCommand_Left()
}

type Command_LeftInt struct {
	LeftInt int64 `protobuf:"varint,4,opt,name=left_int,json=leftInt,proto3,oneof"`
}

type Command_LeftStr struct {
	LeftStr string `protobuf:"bytes,5,opt,name=left_str,json=leftStr,proto3,oneof"`
}

func (*Command_LeftInt) isCommand_Left() {}

func (*Command_LeftStr) isCommand_Left() {}

type isCommand_Right interface {
	isCommand_Right()
}

type Command_RightInt struct {
	RightInt int64 `protobuf:"varint,6,opt,name=right_int,json=rightInt,proto3,oneof"`
}

type Command_RightStr struct {
	RightStr string `protobuf:"bytes,7,opt,name=right_str,json=rightStr,proto3,oneof"`
}

func (*Command_RightInt) isCommand_Right() {}

func (*Command_RightStr) isCommand_Right() {}

type ProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commands      []*Command             `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	mi := &file_api_indusrtial_calculator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_indusrtial_calculator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_api_indusrtial_calculator_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessRequest) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type VariableResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Var           string                 `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	Value         int64                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VariableResult) Reset() {
	*x = VariableResult{}
	mi := &file_api_indusrtial_calculator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VariableResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableResult) ProtoMessage() {}

func (x *VariableResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_indusrtial_calculator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableResult.ProtoReflect.Descriptor instead.
func (*VariableResult) Descriptor() ([]byte, []int) {
	return file_api_indusrtial_calculator_proto_rawDescGZIP(), []int{2}
}

func (x *VariableResult) GetVar() string {
	if x != nil {
		return x.Var
	}
	return ""
}

func (x *VariableResult) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*VariableResult      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessResponse) Reset() {
	*x = ProcessResponse{}
	mi := &file_api_indusrtial_calculator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse) ProtoMessage() {}

func (x *ProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_indusrtial_calculator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse.ProtoReflect.Descriptor instead.
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return file_api_indusrtial_calculator_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessResponse) GetResults() []*VariableResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_api_indusrtial_calculator_proto protoreflect.FileDescriptor

const file_api_indusrtial_calculator_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/indusrtial-calculator.proto\x12\x03api\"\xea\x01\n" +
	"\aCommand\x12$\n" +
	"\x04type\x18\x01 \x01(\x0e2\x10.api.CommandTypeR\x04type\x12\x10\n" +
	"\x03var\x18\x02 \x01(\tR\x03var\x12\x1e\n" +
	"\x02op\x18\x03 \x01(\x0e2\x0e.api.OperationR\x02op\x12\x1b\n" +
	"\bleft_int\x18\x04 \x01(\x03H\x00R\aleftInt\x12\x1b\n" +
	"\bleft_str\x18\x05 \x01(\tH\x00R\aleftStr\x12\x1d\n" +
	"\tright_int\x18\x06 \x01(\x03H\x01R\brightInt\x12\x1d\n" +
	"\tright_str\x18\a \x01(\tH\x01R\brightStrB\x06\n" +
	"\x04leftB\a\n" +
	"\x05right\":\n" +
	"\x0eProcessRequest\x12(\n" +
	"\bcommands\x18\x01 \x03(\v2\f.api.CommandR\bcommands\"8\n" +
	"\x0eVariableResult\x12\x10\n" +
	"\x03var\x18\x01 \x01(\tR\x03var\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\"@\n" +
	"\x0fProcessResponse\x12-\n" +
	"\aresults\x18\x01 \x03(\v2\x13.api.VariableResultR\aresults*\"\n" +
	"\vCommandType\x12\t\n" +
	"\x05PRINT\x10\x00\x12\b\n" +
	"\x04CALC\x10\x01*.\n" +
	"\tOperation\x12\b\n" +
	"\x04PLUS\x10\x00\x12\t\n" +
	"\x05MINUS\x10\x01\x12\f\n" +
	"\bMULTIPLY\x10\x022L\n" +
	"\x14IndustrialCalculator\x124\n" +
	"\aProcess\x12\x13.api.ProcessRequest\x1a\x14.api.ProcessResponseB\x1aZ\x18industrial-calculator.v1b\x06proto3"

var (
	file_api_indusrtial_calculator_proto_rawDescOnce sync.Once
	file_api_indusrtial_calculator_proto_rawDescData []byte
)

func file_api_indusrtial_calculator_proto_rawDescGZIP() []byte {
	file_api_indusrtial_calculator_proto_rawDescOnce.Do(func() {
		file_api_indusrtial_calculator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_indusrtial_calculator_proto_rawDesc), len(file_api_indusrtial_calculator_proto_rawDesc)))
	})
	return file_api_indusrtial_calculator_proto_rawDescData
}

var file_api_indusrtial_calculator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_indusrtial_calculator_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_indusrtial_calculator_proto_goTypes = []any{
	(CommandType)(0),        // 0: api.CommandType
	(Operation)(0),          // 1: api.Operation
	(*Command)(nil),         // 2: api.Command
	(*ProcessRequest)(nil),  // 3: api.ProcessRequest
	(*VariableResult)(nil),  // 4: api.VariableResult
	(*ProcessResponse)(nil), // 5: api.ProcessResponse
}
var file_api_indusrtial_calculator_proto_depIdxs = []int32{
	0, // 0: api.Command.type:type_name -> api.CommandType
	1, // 1: api.Command.op:type_name -> api.Operation
	2, // 2: api.ProcessRequest.commands:type_name -> api.Command
	4, // 3: api.ProcessResponse.results:type_name -> api.VariableResult
	3, // 4: api.IndustrialCalculator.Process:input_type -> api.ProcessRequest
	5, // 5: api.IndustrialCalculator.Process:output_type -> api.ProcessResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_indusrtial_calculator_proto_init() }
func file_api_indusrtial_calculator_proto_init() {
	if File_api_indusrtial_calculator_proto != nil {
		return
	}
	file_api_indusrtial_calculator_proto_msgTypes[0].OneofWrappers = []any{
		(*Command_LeftInt)(nil),
		(*Command_LeftStr)(nil),
		(*Command_RightInt)(nil),
		(*Command_RightStr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_indusrtial_calculator_proto_rawDesc), len(file_api_indusrtial_calculator_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_indusrtial_calculator_proto_goTypes,
		DependencyIndexes: file_api_indusrtial_calculator_proto_depIdxs,
		EnumInfos:         file_api_indusrtial_calculator_proto_enumTypes,
		MessageInfos:      file_api_indusrtial_calculator_proto_msgTypes,
	}.Build()
	File_api_indusrtial_calculator_proto = out.File
	file_api_indusrtial_calculator_proto_goTypes = nil
	file_api_indusrtial_calculator_proto_depIdxs = nil
}
